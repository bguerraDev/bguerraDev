name: Update GitHub Profile README

on:
  schedule:
    - cron: "0 */6 * * *"   # cada 6 horas
  workflow_dispatch:

permissions:
  contents: write   # permite hacer commit

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build dynamic sections (pure Node)
        shell: bash
        run: |
          node - <<'NODE'
          const fs = require('fs');

          async function getJson(url) {
            const res = await fetch(url, {
              headers: { 'Accept': 'application/vnd.github+json' }
            });
            if (!res.ok) throw new Error(`Fetch ${url} -> ${res.status}`);
            return res.json();
          }

          function replaceBetween(src, tag, content) {
            const start = `<!-- ${tag}:START -->`;
            const end   = `<!-- ${tag}:END -->`;
            const re = new RegExp(`${start}[\\s\\S]*?${end}`, 'm');
            if (!re.test(src)) return src;
            return src.replace(re, `${start}\n${content}\n${end}`);
          }

          (async () => {
            const user = 'bguerraDev';

            // 1) Último repo actualizado
            const latestArr = await getJson(`https://api.github.com/users/${user}/repos?sort=updated&per_page=1`);
            const latest = latestArr[0];
            const [ownerL, repoL] = latest.full_name.split('/');

            const basePin = (owner, repo) =>
              `https://github-readme-stats.vercel.app/api/pin/?username=${owner}` +
              `&repo=${repo}&show_owner=true&theme=nightowl` +
              `&bg_color=0,000000,441350&title_color=c56a90&text_color=ffffff&hide_border=true`;

            const latestHTML =
              `<a href="https://github.com/${latest.full_name}">
                <img align="center" width="470" src="${basePin(ownerL, repoL)}" alt="${repoL}" />
              </a>`;

            // 2) Últimos 4 repos (2x2) como pins
            const repos = await getJson(`https://api.github.com/users/${user}/repos?sort=updated&per_page=4`);

            const pinTag = (full) => {
              const [owner, repo] = full.split('/');
              return `<a href="https://github.com/${full}">
  <img width="470" src="${basePin(owner, repo)}" alt="${repo}" />
</a>`;
            };

            const pins = repos.map(r => pinTag(r.full_name));

            const latestPinsHTML =
`<p align="center">
  ${pins[0] || ''}
  ${pins[1] || ''}
</p>
<p align="center">
  ${pins[2] || ''}
  ${pins[3] || ''}
</p>`;

            // 3) Escribir en README entre marcadores
            const path = 'README.md';
            let md = fs.readFileSync(path, 'utf8');
            md = replaceBetween(md, 'LATEST-PROJECT', latestHTML);
            md = replaceBetween(md, 'LATEST-REPOS-PINS', latestPinsHTML);
            fs.writeFileSync(path, md);
          })().catch(err => {
            console.error(err);
            process.exit(1);
          });
          NODE

      - name: Commit and push changes
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "chore: update latest project and repo pins [skip ci]" || echo "No changes"
          git push
